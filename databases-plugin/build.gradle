commonBuildPath = hasProperty("localCommonBuildRepo") ? file(localCommonBuildRepo).toURL().toString() : 'https://github.com/xebialabs/deployit-common-build/raw/master'
apply from: "$commonBuildPath/repositories.gradle"
apply from: "$commonBuildPath/plugin-build.gradle"

version = '3.6.0-SNAPSHOT'
apiVersion = '3.6.0-beta-6'

configurations {
	docgen
}

docgen=[:]
docgen.databasePluginManual = [title: 'Database Plugin Manual', appendCiReference: true, prefixes: 'sql']
apply from: "$commonBuildPath/documentation.gradle"
documentationZip.dependsOn << 'classes'

dependencies {
        compile deps.overthere
	compile "com.xebialabs.deployit:udm-plugin-api:$apiVersion"
	compile "com.xebialabs.deployit.plugins:overthere-plugin:$apiVersion"
	compile "com.xebialabs.deployit.plugins:jee-plugin:$apiVersion"
	compile "com.xebialabs.deployit.plugins:generic-plugin:$apiVersion"
	compile deps.guava
	compile deps.overthere
	runtime "com.xebialabs.deployit:doc-generator:${apiVersion}"		
	testCompile "com.xebialabs.deployit:udm-test-support:$apiVersion"
	testCompile deps.hamcrest_all
	testCompile deps.itest_support
}

def excludeFromAll(project, group, module) {
	project.afterEvaluate { evaluatedProject ->
		evaluatedProject.configurations.all*.getDependencies(ModuleDependency)*.each {
			it.exclude group: group, module: module
		}
	}	
}

